{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\database_seller\\\\client\\\\src\\\\context\\\\cart.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// CartContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCartContext = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCartContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [cartDataForServer, setCartDataForServer] = useState([]);\n  useEffect(() => {\n    // Load cart data from localStorage when the component mounts\n    let existingCartItem = localStorage.getItem(\"cart\");\n    if (existingCartItem) setCart(JSON.parse(existingCartItem));\n  }, []);\n  const addToCart = product => {\n    const existingItemIndex = cart.findIndex(item => item.id === product.id);\n    if (existingItemIndex !== -1) {\n      // If the item already exists in the cart, update its amount\n      const updatedCart = [...cart];\n      updatedCart[existingItemIndex].amount += 1;\n      setCart(updatedCart);\n      localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n      toast.success(\"Item amount updated in cart\");\n    } else {\n      // If the item doesn't exist, add it to the cart\n      const newItem = {\n        ...product,\n        amount: 1\n      };\n      setCart([...cart, newItem]);\n      localStorage.setItem(\"cart\", JSON.stringify([...cart, newItem]));\n      toast.success(\"Item added to cart\");\n    }\n    setCartDataForServer([...cart, {\n      id: product.id,\n      amount: product.amount || 1\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"i6jhPazsv2fQa0Lls4oohWQ/U7Q=\");\n_c = CartProvider;\nconst useCart = () => {\n  _s3();\n  return useContext(CartContext);\n};\n_s3(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { useCart, CartProvider };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsxDEV","_jsxDEV","CartContext","useCartContext","_s","CartProvider","children","_s2","cart","setCart","cartDataForServer","setCartDataForServer","existingCartItem","localStorage","getItem","JSON","parse","addToCart","product","existingItemIndex","findIndex","item","id","updatedCart","amount","setItem","stringify","success","newItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s3","$RefreshReg$"],"sources":["C:/Users/User/Desktop/database_seller/client/src/context/cart.js"],"sourcesContent":["// CartContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCartContext = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [cartDataForServer, setCartDataForServer] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load cart data from localStorage when the component mounts\r\n    let existingCartItem = localStorage.getItem(\"cart\");\r\n    if (existingCartItem) setCart(JSON.parse(existingCartItem));\r\n  }, []);\r\n\r\n  const addToCart = (product) => {\r\n    const existingItemIndex = cart.findIndex((item) => item.id === product.id);\r\n\r\n    if (existingItemIndex !== -1) {\r\n      // If the item already exists in the cart, update its amount\r\n      const updatedCart = [...cart];\r\n      updatedCart[existingItemIndex].amount += 1;\r\n      setCart(updatedCart);\r\n      localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\r\n      toast.success(\"Item amount updated in cart\");\r\n    } else {\r\n      // If the item doesn't exist, add it to the cart\r\n      const newItem = { ...product, amount: 1 };\r\n      setCart([...cart, newItem]);\r\n      localStorage.setItem(\"cart\", JSON.stringify([...cart, newItem]));\r\n      toast.success(\"Item added to cart\");\r\n    }\r\n\r\n    setCartDataForServer([...cart, { id: product.id, amount: product.amount || 1 }]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nconst useCart = () => useContext(CartContext);\r\n\r\nexport { useCart, CartProvider };\r\n"],"mappings":";;;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,OAAOR,UAAU,CAACM,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,cAAc;AAI3B,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACd;IACA,IAAIc,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACnD,IAAIF,gBAAgB,EAAEH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,gBAAgB,CAAC,CAAC;EAC7D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,SAAS,GAAIC,OAAO,IAAK;IAC7B,MAAMC,iBAAiB,GAAGX,IAAI,CAACY,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IAE1E,IAAIH,iBAAiB,KAAK,CAAC,CAAC,EAAE;MAC5B;MACA,MAAMI,WAAW,GAAG,CAAC,GAAGf,IAAI,CAAC;MAC7Be,WAAW,CAACJ,iBAAiB,CAAC,CAACK,MAAM,IAAI,CAAC;MAC1Cf,OAAO,CAACc,WAAW,CAAC;MACpBV,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACH,WAAW,CAAC,CAAC;MACzDxB,KAAK,CAAC4B,OAAO,CAAC,6BAA6B,CAAC;IAC9C,CAAC,MAAM;MACL;MACA,MAAMC,OAAO,GAAG;QAAE,GAAGV,OAAO;QAAEM,MAAM,EAAE;MAAE,CAAC;MACzCf,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEoB,OAAO,CAAC,CAAC;MAC3Bf,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAAC,CAAC,GAAGlB,IAAI,EAAEoB,OAAO,CAAC,CAAC,CAAC;MAChE7B,KAAK,CAAC4B,OAAO,CAAC,oBAAoB,CAAC;IACrC;IAEAhB,oBAAoB,CAAC,CAAC,GAAGH,IAAI,EAAE;MAAEc,EAAE,EAAEJ,OAAO,CAACI,EAAE;MAAEE,MAAM,EAAEN,OAAO,CAACM,MAAM,IAAI;IAAE,CAAC,CAAC,CAAC;EAClF,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAES;IAAU,CAAE;IAAAX,QAAA,EAC9CA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,GAAA,CApCIF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAsClB,MAAM+B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzC,UAAU,CAACM,WAAW,CAAC;AAAA;AAACmC,GAAA,CAAxCD,OAAO;AAEb,SAASA,OAAO,EAAE/B,YAAY;AAAG,IAAA8B,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}