{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Bao_AI\\\\data_project\\\\database_seller\\\\client\\\\src\\\\context\\\\cart.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useContext, createContext, useEffect } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [cartDataForServer, setCartDataForServer] = useState([]);\n  const addToCart = product => {\n    const existingItem = cart.find(item => item.id === product.id);\n    if (existingItem) {\n      // If the item already exists in the cart, update its amount in the client-side state\n      const updatedCart = cart.map(item => item.id === product.id ? {\n        ...item,\n        amount: item.amount + 1\n      } // Increment the amount\n      : item);\n      setCart(updatedCart);\n      localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n      toast.success(\"Item amount updated in cart\");\n    } else {\n      // If the item is not in the cart, add it with an initial amount of 1\n      const newItem = {\n        ...product,\n        amount: 1\n      };\n      setCart([...cart, newItem]);\n      localStorage.setItem(\"cart\", JSON.stringify([...cart, newItem]));\n      toast.success(\"Item added to cart\");\n    }\n\n    // Update the cart data for the server\n    setCartDataForServer([...cart, {\n      id: product.id,\n      amount: product.amount || 1\n    }]);\n  };\n  useEffect(() => {\n    let existingCartItem = localStorage.getItem(\"cart\");\n    if (existingCartItem) setCart(JSON.parse(existingCartItem));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: [cart, cartDataForServer, addToCart],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n// custom hook\n_s(CartProvider, \"i6jhPazsv2fQa0Lls4oohWQ/U7Q=\");\n_c = CartProvider;\nconst useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { useCart, CartProvider };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useState","useContext","createContext","useEffect","toast","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","cartDataForServer","setCartDataForServer","addToCart","product","existingItem","find","item","id","updatedCart","map","amount","localStorage","setItem","JSON","stringify","success","newItem","existingCartItem","getItem","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/Bao_AI/data_project/database_seller/client/src/context/cart.js"],"sourcesContent":["import { useState, useContext, createContext, useEffect } from \"react\";\r\nimport {toast} from \"react-hot-toast\";\r\n\r\nconst CartContext = createContext();\r\nconst CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [cartDataForServer, setCartDataForServer] = useState([]);\r\n\r\n  const addToCart = (product) => {\r\n    const existingItem = cart.find((item) => item.id === product.id);\r\n\r\n    if (existingItem) {\r\n      // If the item already exists in the cart, update its amount in the client-side state\r\n      const updatedCart = cart.map((item) =>\r\n        item.id === product.id\r\n          ? { ...item, amount: item.amount + 1 } // Increment the amount\r\n          : item\r\n      );\r\n      setCart(updatedCart);\r\n      localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\r\n      toast.success(\"Item amount updated in cart\");\r\n    } else {\r\n      // If the item is not in the cart, add it with an initial amount of 1\r\n      const newItem = { ...product, amount: 1 };\r\n      setCart([...cart, newItem]);\r\n      localStorage.setItem(\"cart\", JSON.stringify([...cart, newItem]));\r\n      toast.success(\"Item added to cart\");\r\n    }\r\n\r\n    // Update the cart data for the server\r\n    setCartDataForServer([...cart, { id: product.id, amount: product.amount || 1 }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let existingCartItem = localStorage.getItem(\"cart\");\r\n    if (existingCartItem) setCart(JSON.parse(existingCartItem));\r\n  }, []);\r\n\r\n  return (\r\n    <CartContext.Provider value={[cart, cartDataForServer, addToCart]}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// custom hook\r\nconst useCart = () => useContext(CartContext);\r\n\r\nexport { useCart, CartProvider };\r\n"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AACtE,SAAQC,KAAK,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AACnC,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMe,SAAS,GAAIC,OAAO,IAAK;IAC7B,MAAMC,YAAY,GAAGN,IAAI,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IAEhE,IAAIH,YAAY,EAAE;MAChB;MACA,MAAMI,WAAW,GAAGV,IAAI,CAACW,GAAG,CAAEH,IAAI,IAChCA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,GAClB;QAAE,GAAGD,IAAI;QAAEI,MAAM,EAAEJ,IAAI,CAACI,MAAM,GAAG;MAAE,CAAC,CAAC;MAAA,EACrCJ,IACN,CAAC;MACDP,OAAO,CAACS,WAAW,CAAC;MACpBG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC,CAAC;MACzDjB,KAAK,CAACwB,OAAO,CAAC,6BAA6B,CAAC;IAC9C,CAAC,MAAM;MACL;MACA,MAAMC,OAAO,GAAG;QAAE,GAAGb,OAAO;QAAEO,MAAM,EAAE;MAAE,CAAC;MACzCX,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEkB,OAAO,CAAC,CAAC;MAC3BL,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,GAAGhB,IAAI,EAAEkB,OAAO,CAAC,CAAC,CAAC;MAChEzB,KAAK,CAACwB,OAAO,CAAC,oBAAoB,CAAC;IACrC;;IAEA;IACAd,oBAAoB,CAAC,CAAC,GAAGH,IAAI,EAAE;MAAES,EAAE,EAAEJ,OAAO,CAACI,EAAE;MAAEG,MAAM,EAAEP,OAAO,CAACO,MAAM,IAAI;IAAE,CAAC,CAAC,CAAC;EAClF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd,IAAI2B,gBAAgB,GAAGN,YAAY,CAACO,OAAO,CAAC,MAAM,CAAC;IACnD,IAAID,gBAAgB,EAAElB,OAAO,CAACc,IAAI,CAACM,KAAK,CAACF,gBAAgB,CAAC,CAAC;EAC7D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE,CAACvB,IAAI,EAAEE,iBAAiB,EAAEE,SAAS,CAAE;IAAAN,QAAA,EAC/DA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAA5B,EAAA,CAzCMF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AA0ClB,MAAMgC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxC,UAAU,CAACM,WAAW,CAAC;AAAA;AAACkC,GAAA,CAAxCD,OAAO;AAEb,SAASA,OAAO,EAAEhC,YAAY;AAAG,IAAA+B,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}