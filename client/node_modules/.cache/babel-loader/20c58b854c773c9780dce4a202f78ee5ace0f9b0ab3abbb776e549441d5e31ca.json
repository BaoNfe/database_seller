{"ast":null,"code":"import _defineProperty from \"C:/Users/User/Desktop/ecommerce-app-2023-15-admin-orders-css/ecommerce-app-2023-15-admin-orders-css/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/User/Desktop/ecommerce-app-2023-15-admin-orders-css/ecommerce-app-2023-15-admin-orders-css/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Popover from '../popover';\nimport { cloneElement } from '../_util/reactNode';\nimport Avatar from './avatar';\nimport AvatarContext from './AvatarContext';\nimport useStyle from './style';\nvar AvatarContextProvider = function AvatarContextProvider(props) {\n  var _React$useContext = React.useContext(AvatarContext),\n    size = _React$useContext.size,\n    shape = _React$useContext.shape;\n  var avatarContextValue = React.useMemo(function () {\n    return {\n      size: props.size || size,\n      shape: props.shape || shape\n    };\n  }, [props.size, props.shape, size, shape]);\n  return /*#__PURE__*/React.createElement(AvatarContext.Provider, {\n    value: avatarContextValue\n  }, props.children);\n};\nvar Group = function Group(props) {\n  var _React$useContext2 = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext2.getPrefixCls,\n    direction = _React$useContext2.direction;\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    rootClassName = props.rootClassName,\n    style = props.style,\n    maxCount = props.maxCount,\n    maxStyle = props.maxStyle,\n    size = props.size,\n    shape = props.shape,\n    _props$maxPopoverPlac = props.maxPopoverPlacement,\n    maxPopoverPlacement = _props$maxPopoverPlac === void 0 ? 'top' : _props$maxPopoverPlac,\n    _props$maxPopoverTrig = props.maxPopoverTrigger,\n    maxPopoverTrigger = _props$maxPopoverTrig === void 0 ? 'hover' : _props$maxPopoverTrig,\n    children = props.children;\n  var prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  var groupPrefixCls = \"\".concat(prefixCls, \"-group\");\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  var cls = classNames(groupPrefixCls, _defineProperty({}, \"\".concat(groupPrefixCls, \"-rtl\"), direction === 'rtl'), className, rootClassName, hashId);\n  var childrenWithProps = toArray(children).map(function (child, index) {\n    return cloneElement(child, {\n      key: \"avatar-key-\".concat(index)\n    });\n  });\n  var numOfChildren = childrenWithProps.length;\n  if (maxCount && maxCount < numOfChildren) {\n    var childrenShow = childrenWithProps.slice(0, maxCount);\n    var childrenHidden = childrenWithProps.slice(maxCount, numOfChildren);\n    childrenShow.push( /*#__PURE__*/React.createElement(Popover, {\n      key: \"avatar-popover-key\",\n      content: childrenHidden,\n      trigger: maxPopoverTrigger,\n      placement: maxPopoverPlacement,\n      overlayClassName: \"\".concat(groupPrefixCls, \"-popover\")\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      style: maxStyle\n    }, \"+\".concat(numOfChildren - maxCount))));\n    return wrapSSR( /*#__PURE__*/React.createElement(AvatarContextProvider, {\n      shape: shape,\n      size: size\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, childrenShow)));\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(AvatarContextProvider, {\n    shape: shape,\n    size: size\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: style\n  }, childrenWithProps)));\n};\nexport default Group;","map":{"version":3,"names":["classNames","toArray","React","ConfigContext","Popover","cloneElement","Avatar","AvatarContext","useStyle","AvatarContextProvider","props","useContext","size","shape","avatarContextValue","useMemo","createElement","Provider","value","children","Group","getPrefixCls","direction","customizePrefixCls","prefixCls","className","rootClassName","style","maxCount","maxStyle","maxPopoverPlacement","maxPopoverTrigger","groupPrefixCls","wrapSSR","hashId","cls","childrenWithProps","map","child","index","key","numOfChildren","length","childrenShow","slice","childrenHidden","push","content","trigger","placement","overlayClassName"],"sources":["C:/Users/User/Desktop/ecommerce-app-2023-15-admin-orders-css/ecommerce-app-2023-15-admin-orders-css/client/node_modules/antd/es/avatar/group.js"],"sourcesContent":["import classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Popover from '../popover';\nimport { cloneElement } from '../_util/reactNode';\nimport Avatar from './avatar';\nimport AvatarContext from './AvatarContext';\nimport useStyle from './style';\nconst AvatarContextProvider = props => {\n  const {\n    size,\n    shape\n  } = React.useContext(AvatarContext);\n  const avatarContextValue = React.useMemo(() => ({\n    size: props.size || size,\n    shape: props.shape || shape\n  }), [props.size, props.shape, size, shape]);\n  return /*#__PURE__*/React.createElement(AvatarContext.Provider, {\n    value: avatarContextValue\n  }, props.children);\n};\nconst Group = props => {\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    style,\n    maxCount,\n    maxStyle,\n    size,\n    shape,\n    maxPopoverPlacement = 'top',\n    maxPopoverTrigger = 'hover',\n    children\n  } = props;\n  const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cls = classNames(groupPrefixCls, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  const childrenWithProps = toArray(children).map((child, index) => cloneElement(child, {\n    key: `avatar-key-${index}`\n  }));\n  const numOfChildren = childrenWithProps.length;\n  if (maxCount && maxCount < numOfChildren) {\n    const childrenShow = childrenWithProps.slice(0, maxCount);\n    const childrenHidden = childrenWithProps.slice(maxCount, numOfChildren);\n    childrenShow.push( /*#__PURE__*/React.createElement(Popover, {\n      key: \"avatar-popover-key\",\n      content: childrenHidden,\n      trigger: maxPopoverTrigger,\n      placement: maxPopoverPlacement,\n      overlayClassName: `${groupPrefixCls}-popover`\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      style: maxStyle\n    }, `+${numOfChildren - maxCount}`)));\n    return wrapSSR( /*#__PURE__*/React.createElement(AvatarContextProvider, {\n      shape: shape,\n      size: size\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, childrenShow)));\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(AvatarContextProvider, {\n    shape: shape,\n    size: size\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cls,\n    style: style\n  }, childrenWithProps)));\n};\nexport default Group;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}